{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { rateLimitEmail, type RateLimitEmailOutput } from '@/ai/flows/ai-rate-limiter';\nimport type { EmailBatch, EmailResult } from '@/lib/types';\nimport nodemailer from 'nodemailer';\n\nconst FormSchema = z.object({\n  subject: z.string().min(1, 'Subject is required.'),\n  body: z.string().min(1, 'Email body is required.'),\n  recipients: z.string().min(1, 'Recipients are required.'),\n});\n\ntype State = {\n  message?: string | null;\n  errors?: {\n    subject?: string[];\n    body?: string[];\n    recipients?: string[];\n  };\n  batch?: EmailBatch | null;\n};\n\n// Configure Nodemailer with your Gmail credentials\nconst transporter = nodemailer.createTransport({\n  service: 'gmail',\n  auth: {\n    user: process.env.GMAIL_EMAIL,\n    pass: process.env.GMAIL_APP_PASSWORD,\n  },\n});\n\n\nexport async function sendBulkEmail(prevState: State, formData: FormData): Promise<State> {\n  const validatedFields = FormSchema.safeParse({\n    subject: formData.get('subject'),\n    body: formData.get('body'),\n    recipients: formData.get('recipients'),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: 'Missing Fields. Failed to Send Email.',\n    };\n  }\n\n  if (!process.env.GMAIL_EMAIL || !process.env.GMAIL_APP_PASSWORD || process.env.GMAIL_EMAIL === 'your-email@gmail.com') {\n    return {\n      message: 'Email service is not configured. Please set GMAIL_EMAIL and GMAIL_APP_PASSWORD in your .env file.',\n    };\n  }\n\n  const recipients = validatedFields.data.recipients\n    .split(/[\\n,;]+/)\n    .map((email) => email.trim())\n    .filter((email) => email.length > 0 && z.string().email().safeParse(email).success)\n    .filter((value, index, self) => self.indexOf(value) === index); // Unique emails\n\n  if (recipients.length === 0) {\n    return { message: 'Please provide at least one valid recipient email.' };\n  }\n\n  const { subject, body } = validatedFields.data;\n\n  const results: EmailResult[] = await Promise.all(\n    recipients.map(async (recipient) => {\n      try {\n        // Decide whether to send the email using the AI rate limiter\n        const rateLimitResult: RateLimitEmailOutput = await rateLimitEmail({\n          recipientEmail: recipient,\n          emailContent: `${subject}\\n\\n${body}`,\n          // Using placeholder scores. In a real app, these would be dynamic.\n          senderReputationScore: 0.8,\n          recipientEngagementScore: 0.5,\n        });\n\n        if (rateLimitResult.shouldSendEmail) {\n            // Send mail with defined transport object\n            await transporter.sendMail({\n              from: `\"Bulkmail App\" <${process.env.GMAIL_EMAIL}>`, // sender address\n              to: recipient, // list of receivers\n              subject: subject, // Subject line\n              text: body, // plain text body\n              html: `<p>${body.replace(/\\n/g, '<br>')}</p>`, // html body\n            });\n            return { recipient, status: 'Sent' as const, reason: 'Email sent successfully.' };\n        } else {\n            return { recipient, status: 'Blocked' as const, reason: rateLimitResult.reason };\n        }\n\n      } catch (error) {\n        console.error(`Failed to send email to ${recipient}:`, error);\n        const errorMessage = (error instanceof Error) ? error.message : 'An unknown error occurred.';\n        return { recipient, status: 'Failed' as const, reason: `Failed to send: ${errorMessage}` };\n      }\n    })\n  );\n\n  const batch: EmailBatch = {\n    id: new Date().toISOString(),\n    subject: subject,\n    body: body,\n    recipients: recipients,\n    results,\n    sentAt: new Date().toISOString(),\n  };\n\n  return { message: 'Email batch processing complete.', batch };\n}\n"],"names":[],"mappings":";;;;;;IAiCsB,gBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 410, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,mKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,8OAAC,mKAAA,CAAA,UAAwB;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sYACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/app/email-form.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useRef } from 'react';\nimport { useFormState, useFormStatus } from 'react-dom';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Bot, Loader2, Send, CheckCircle, XCircle, AlertTriangle, Info } from 'lucide-react';\n\nimport { sendBulkEmail } from '@/app/actions';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { useToast } from '@/hooks/use-toast';\nimport type { EmailBatch, EmailResult } from '@/lib/types';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\n\nconst HISTORY_KEY = 'bulkmail_history';\n\nconst FormSchema = z.object({\n  subject: z.string().min(1, 'Subject is required.'),\n  body: z.string().min(1, 'Email body is required.'),\n  recipients: z.string().min(1, 'At least one recipient is required.'),\n});\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return (\n    <Button type=\"submit\" disabled={pending} className=\"w-full sm:w-auto\">\n      {pending ? (\n        <>\n          <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n          Processing...\n        </>\n      ) : (\n        <>\n          <Send className=\"mr-2 h-4 w-4\" />\n          Send Emails\n        </>\n      )}\n    </Button>\n  );\n}\n\nconst StatusIcon = ({ status }: { status: EmailResult['status'] }) => {\n  switch (status) {\n    case 'Sent':\n      return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n    case 'Blocked':\n      return <XCircle className=\"h-5 w-5 text-yellow-500\" />;\n    case 'Failed':\n      return <AlertTriangle className=\"h-5 w-5 text-red-500\" />;\n    default:\n      return null;\n  }\n};\n\nexport function EmailForm() {\n  const [state, formAction] = useFormState(sendBulkEmail, { message: null, batch: null });\n  const { toast } = useToast();\n  const formRef = useRef<HTMLFormElement>(null);\n\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      subject: '',\n      body: '',\n      recipients: '',\n    },\n  });\n\n  useEffect(() => {\n    if (state.message && state.batch) {\n      toast({\n        title: 'Batch Processed',\n        description: `${state.batch.results.filter((r) => r.status === 'Sent').length} emails sent.`,\n      });\n\n      const storedHistory = localStorage.getItem(HISTORY_KEY);\n      const history: EmailBatch[] = storedHistory ? JSON.parse(storedHistory) : [];\n      history.unshift(state.batch);\n      localStorage.setItem(HISTORY_KEY, JSON.stringify(history.slice(0, 50))); // Limit history size\n      form.reset();\n\n    } else if (state.message && !state.batch) {\n      toast({\n        title: 'Error',\n        description: state.message,\n        variant: 'destructive',\n      });\n    }\n  }, [state, toast, form]);\n\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 w-full\">\n      <Card className=\"flex flex-col\">\n        <CardHeader>\n          <CardTitle className=\"font-headline text-2xl\">Compose Email</CardTitle>\n          <CardDescription>Enter the details for your bulk email campaign.</CardDescription>\n        </CardHeader>\n        <form ref={formRef} action={formAction} className=\"flex flex-col flex-1\">\n          <CardContent className=\"space-y-4 flex-1\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"subject\">Subject</Label>\n              <Input id=\"subject\" name=\"subject\" placeholder=\"Your amazing subject line\" />\n              {state.errors?.subject && <p className=\"text-sm text-destructive\">{state.errors.subject[0]}</p>}\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"recipients\">Recipients</Label>\n              <Textarea\n                id=\"recipients\"\n                name=\"recipients\"\n                placeholder=\"Enter recipient emails, separated by commas, spaces, or new lines.\"\n                className=\"min-h-[100px]\"\n              />\n              {state.errors?.recipients && <p className=\"text-sm text-destructive\">{state.errors.recipients[0]}</p>}\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"body\">Body</Label>\n              <Textarea id=\"body\" name=\"body\" placeholder=\"Write your email content here.\" className=\"min-h-[200px]\" />\n              {state.errors?.body && <p className=\"text-sm text-destructive\">{state.errors.body[0]}</p>}\n            </div>\n          </CardContent>\n          <CardFooter className=\"flex justify-end\">\n            <SubmitButton />\n          </CardFooter>\n        </form>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"font-headline text-2xl\">Results</CardTitle>\n          <CardDescription>Status of the most recent email batch.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {state.batch ? (\n            <div className=\"space-y-4\">\n               <Alert>\n                <Bot className=\"h-4 w-4\" />\n                <AlertTitle className=\"font-headline\">AI Rate Limiter Active</AlertTitle>\n                <AlertDescription>\n                  Each email is analyzed to prevent spam and improve deliverability.\n                </AlertDescription>\n              </Alert>\n              <ScrollArea className=\"h-[450px] border rounded-md\">\n                <TooltipProvider>\n                  <Table>\n                    <TableHeader className=\"sticky top-0 bg-card\">\n                      <TableRow>\n                        <TableHead className=\"w-[40px]\"></TableHead>\n                        <TableHead>Recipient</TableHead>\n                        <TableHead>Status</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {state.batch.results.map((result, index) => (\n                        <TableRow key={index}>\n                          <TableCell className=\"text-center\">\n                            <StatusIcon status={result.status} />\n                          </TableCell>\n                          <TableCell className=\"font-medium\">{result.recipient}</TableCell>\n                          <TableCell>\n                            <div className=\"flex items-center gap-2\">\n                            <Badge variant={result.status === 'Sent' ? 'default' : result.status === 'Blocked' ? 'secondary' : 'destructive'}>\n                              {result.status}\n                            </Badge>\n                             <Tooltip>\n                                <TooltipTrigger asChild>\n                                  <Info className=\"h-4 w-4 text-muted-foreground cursor-pointer\" />\n                                </TooltipTrigger>\n                                <TooltipContent>\n                                  <p>{result.reason}</p>\n                                </TooltipContent>\n                              </Tooltip>\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TooltipProvider>\n              </ScrollArea>\n            </div>\n          ) : (\n            <div className=\"flex flex-col items-center justify-center h-[450px] text-center bg-muted/50 rounded-lg\">\n              <Bot className=\"h-16 w-16 text-muted-foreground\" />\n              <p className=\"mt-4 text-muted-foreground\">\n                Your email batch results will appear here.\n              </p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1101, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["'use client';\nimport { useAuth } from '@/context/auth-context';\nimport { useRouter } from 'next/navigation';\nimport { useEffect } from 'react';\nimport { EmailForm } from '@/components/app/email-form';\n\nexport default function Home() {\n  const { isAuthenticated } = useAuth();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      router.push('/login');\n    }\n  }, [isAuthenticated, router]);\n\n  if (!isAuthenticated) {\n    return null; // or a loading spinner\n  }\n\n  return (\n    <div className=\"container mx-auto p-4 md:p-8 flex-1\">\n      <EmailForm />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAJA;;;;;;AAMe,SAAS;IACtB,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAClC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,iBAAiB;YACpB,OAAO,IAAI,CAAC;QACd;IACF,GAAG;QAAC;QAAiB;KAAO;IAE5B,IAAI,CAAC,iBAAiB;QACpB,OAAO,MAAM,uBAAuB;IACtC;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,0IAAA,CAAA,YAAS;;;;;;;;;;AAGhB","debugId":null}}]
}