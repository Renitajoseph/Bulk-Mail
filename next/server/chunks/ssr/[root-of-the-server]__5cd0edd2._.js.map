{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Joses%20Renita/OneDrive/Desktop/FSWD/bulk-mail%20app/src/server/actions/email.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport type { EmailBatch, EmailResult } from '@/lib/types';\nimport nodemailer from 'nodemailer';\n\nconst FormSchema = z.object({\n  subject: z.string().min(1, 'Subject is required.'),\n  body: z.string().min(1, 'Email body is required.'),\n  recipients: z.string().min(1, 'Recipients are required.'),\n});\n\ntype State = {\n  message?: string | null;\n  errors?: {\n    subject?: string[];\n    body?: string[];\n    recipients?: string[];\n  };\n  batch?: EmailBatch | null;\n};\n\nexport async function sendBulkEmail(prevState: State, formData: FormData): Promise<State> {\n  const validatedFields = FormSchema.safeParse({\n    subject: formData.get('subject'),\n    body: formData.get('body'),\n    recipients: formData.get('recipients'),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: 'Missing Fields. Failed to Send Email.',\n    };\n  }\n\n  if (!process.env.GMAIL_EMAIL || !process.env.GMAIL_APP_PASSWORD || process.env.GMAIL_EMAIL === 'your-email@gmail.com') {\n    return {\n      message: 'Email service is not configured. Please set GMAIL_EMAIL and GMAIL_APP_PASSWORD in your .env file.',\n    };\n  }\n\n  // Configure Nodemailer with your Gmail credentials\n  const transporter = nodemailer.createTransport({\n    service: 'gmail',\n    auth: {\n      user: process.env.GMAIL_EMAIL,\n      pass: process.env.GMAIL_APP_PASSWORD,\n    },\n  });\n\n\n  const recipients = validatedFields.data.recipients\n    .split(/[\\n,;]+/)\n    .map((email) => email.trim())\n    .filter((email) => email.length > 0 && z.string().email().safeParse(email).success)\n    .filter((value, index, self) => self.indexOf(value) === index); // Unique emails\n\n  if (recipients.length === 0) {\n    return { message: 'Please provide at least one valid recipient email.' };\n  }\n\n  const { subject, body } = validatedFields.data;\n\n  const results: EmailResult[] = await Promise.all(\n    recipients.map(async (recipient) => {\n      try {\n        // Send mail with defined transport object\n        await transporter.sendMail({\n          from: `\"Bulkmail App\" <${process.env.GMAIL_EMAIL}>`, // sender address\n          to: recipient, // list of receivers\n          subject: subject, // Subject line\n          text: body, // plain text body\n          html: `<p>${body.replace(/\\n/g, '<br>')}</p>`, // html body\n        });\n        return { recipient, status: 'Sent' as const, reason: 'Email sent successfully.' };\n\n      } catch (error) {\n        console.error(`Failed to send email to ${recipient}:`, error);\n        const errorMessage = (error instanceof Error) ? error.message : 'An unknown error occurred.';\n        return { recipient, status: 'Failed' as const, reason: `Failed to send: ${errorMessage}` };\n      }\n    })\n  );\n\n  const batch: EmailBatch = {\n    id: new Date().toISOString(),\n    subject: subject,\n    body: body,\n    recipients: recipients,\n    results,\n    sentAt: new Date().toISOString(),\n  };\n\n  return { message: 'Email batch processing complete.', batch };\n}\n"],"names":[],"mappings":";;;;;AAEA;AAEA;;;;;;AAEA,MAAM,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1B,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC3B,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAChC;AAYO,eAAe,cAAc,SAAgB,EAAE,QAAkB;IACtE,MAAM,kBAAkB,WAAW,SAAS,CAAC;QAC3C,SAAS,SAAS,GAAG,CAAC;QACtB,MAAM,SAAS,GAAG,CAAC;QACnB,YAAY,SAAS,GAAG,CAAC;IAC3B;IAEA,IAAI,CAAC,gBAAgB,OAAO,EAAE;QAC5B,OAAO;YACL,QAAQ,gBAAgB,KAAK,CAAC,OAAO,GAAG,WAAW;YACnD,SAAS;QACX;IACF;IAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,IAAI,CAAC,QAAQ,GAAG,CAAC,kBAAkB,IAAI,QAAQ,GAAG,CAAC,WAAW,KAAK,wBAAwB;QACrH,OAAO;YACL,SAAS;QACX;IACF;IAEA,mDAAmD;IACnD,MAAM,cAAc,+IAAA,CAAA,UAAU,CAAC,eAAe,CAAC;QAC7C,SAAS;QACT,MAAM;YACJ,MAAM,QAAQ,GAAG,CAAC,WAAW;YAC7B,MAAM,QAAQ,GAAG,CAAC,kBAAkB;QACtC;IACF;IAGA,MAAM,aAAa,gBAAgB,IAAI,CAAC,UAAU,CAC/C,KAAK,CAAC,WACN,GAAG,CAAC,CAAC,QAAU,MAAM,IAAI,IACzB,MAAM,CAAC,CAAC,QAAU,MAAM,MAAM,GAAG,KAAK,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,GAAG,SAAS,CAAC,OAAO,OAAO,EACjF,MAAM,CAAC,CAAC,OAAO,OAAO,OAAS,KAAK,OAAO,CAAC,WAAW,QAAQ,gBAAgB;IAElF,IAAI,WAAW,MAAM,KAAK,GAAG;QAC3B,OAAO;YAAE,SAAS;QAAqD;IACzE;IAEA,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,gBAAgB,IAAI;IAE9C,MAAM,UAAyB,MAAM,QAAQ,GAAG,CAC9C,WAAW,GAAG,CAAC,OAAO;QACpB,IAAI;YACF,0CAA0C;YAC1C,MAAM,YAAY,QAAQ,CAAC;gBACzB,MAAM,CAAC,gBAAgB,EAAE,QAAQ,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;gBACnD,IAAI;gBACJ,SAAS;gBACT,MAAM;gBACN,MAAM,CAAC,GAAG,EAAE,KAAK,OAAO,CAAC,OAAO,QAAQ,IAAI,CAAC;YAC/C;YACA,OAAO;gBAAE;gBAAW,QAAQ;gBAAiB,QAAQ;YAA2B;QAElF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,wBAAwB,EAAE,UAAU,CAAC,CAAC,EAAE;YACvD,MAAM,eAAe,AAAC,iBAAiB,QAAS,MAAM,OAAO,GAAG;YAChE,OAAO;gBAAE;gBAAW,QAAQ;gBAAmB,QAAQ,CAAC,gBAAgB,EAAE,cAAc;YAAC;QAC3F;IACF;IAGF,MAAM,QAAoB;QACxB,IAAI,IAAI,OAAO,WAAW;QAC1B,SAAS;QACT,MAAM;QACN,YAAY;QACZ;QACA,QAAQ,IAAI,OAAO,WAAW;IAChC;IAEA,OAAO;QAAE,SAAS;QAAoC;IAAM;AAC9D;;;IAzEsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Joses%20Renita/OneDrive/Desktop/FSWD/bulk-mail%20app/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {sendBulkEmail as '60381ea511dd07c28405b567c0c9c9760f91957ebf'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Joses%20Renita/OneDrive/Desktop/FSWD/bulk-mail%20app/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Joses%20Renita/OneDrive/Desktop/FSWD/bulk-mail%20app/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}